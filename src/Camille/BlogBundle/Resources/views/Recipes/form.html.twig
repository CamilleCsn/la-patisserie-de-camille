<div class="well col-sm-12">
  {{ form_start(form, {'attr': {'class': 'form-vertical'}}) }}

  	{# les erreurs générales du formulaire #}
  	{{ form_errors(form) }}

    	<div class="form-group label-floating col-sm-6">

    		{# génération du label #}
    		{{ form_label(form.title, "Titre de la recette", {'label_attr': {'class': 'control-label'}}) }}

        {# génération de l'input #}
        {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}

        {# affichage des erreurs pour ce champs précis #}
        {{ form_errors(form.title) }}

      </div>

      <div class="form-group label-floating col-sm-6">

        {{ form_label(form.author, "Auteur", {'label_attr': {'class': 'control-label'}}) }}

        {{ form_errors(form.author )}}

        {{ form_widget(form.author, {'attr': {'class':'col-sm-6 form-control'}}) }}

      </div>

      <div class="form-group label-floating col-sm-6">

    		{{ form_label(form.content, "Indications", {'label_attr': {'class': 'control-label'}}) }}

    		{{ form_widget(form.content, {'attr': {'class': 'form-control'}}) }}

        {{ form_errors(form.content )}}

      </div>

      <div class="form-group label-floating col-sm-6">
        
        {{ form_label(form.ingredients, "Ingrédients", {'label_attr': {'class': 'control-label'}}) }}

        {{ form_widget(form.ingredients, {'attr': {'class': 'form-control', 'placeholer': 'TEST'}}) }}

        {{ form_errors(form.ingredients )}}

        <p class="help-block">Merci d'utiliser des tirets pour rentrer la liste des ingrédients :)</p>

      </div>

      <div class="form-thumbnail col-sm-6">
        {{ form_row(form.thumbnail) }}
      </div>

      <div class="form-categories col-sm-6">
        {{ form_row(form.categories) }}
      </div>

      <div class="form-images col-sm-6">
        {{ form_row(form.images) }}
      </div>

    	{# pour le bonton, pas de label ni d'erreyr, on affiche juste le widget #}
    	{{ form_widget(form.save, {'attr': {'class': 'btn-save btn btn-success btn-raised'}}) }}

    	{# génération des champs auto des champs par encore écrits comme le champs CRCF et tous les champs cachés (type "hidden") #}
    	{# {{ form_rest(form) }} #}

    	{# fermeture de la balise <form> du formulaire en HTML #}
  	{{ form_end(form) }}

</div>

{# On charge la bibliothèque jQuery. Ici, je la prends depuis le CDN google
   mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

{# Voici le script en question : #}
<script type="text/javascript">
  $(document).ready(function() {
    // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('div#camille_blogbundle_recipe_images');



    // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
    var index = $container.find(':input').length;

    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
    if (index == 0) {
      addImage($container);
    } else {
      // Pour chaque catégorie déjà existante, on ajoute un lien de suppression
      $container.children('div').each(function() {
        addDeleteLink($(this));
      });
    }

    // La fonction qui ajoute un formulaire image
    function addImage($container) {
      // Dans le contenu de l'attribut « data-prototype », on remplace :
      // - le texte "__name__label__" qu'il contient par le label du champ
      // - le texte "__name__" qu'il contient par le numéro du champ
      var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Image n°' + (index+1))
          .replace(/__name__/g, index));

      // On ajoute au prototype un lien pour pouvoir supprimer l'image'
      addDeleteLink($prototype);

      // On ajoute le prototype modifié à la fin de la balise <div>
      $container.append($prototype);

      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
      index++;
    }

    // La fonction qui ajoute un lien de suppression d'une catégorie
    function addDeleteLink($prototype) {
      // Création du lien
      $deleteLink = $('<a href="#" class="btn btn-raised btn-danger">Supprimer</a>');

      // Ajout du lien
      $prototype.append($deleteLink);

      // Ajout du listener sur le clic du lien
      $deleteLink.click(function(e) {
        $prototype.remove();
        e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        return false;
      });
    }

        // On ajoute un lien pour ajouter une nouvelle image
    var $addLink = $('<a href="#" id="add_image" class="btn btn btn-raised btn-primary">Ajouter une image</a>');
    $container.append($addLink);

    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
    $addLink.click(function(e) {
      addImage($container);
      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
      return false;
    });

  });
</script>



